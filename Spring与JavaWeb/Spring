# 为什么选择Spring

1. Spring是非侵入式的框架，轻量级，对现有的类结构没有影响

2. 可以提供众多的服务，例如事务的管理，WS等

3. 方便面向切面编程，使得业务逻辑和系统的服务分离

4. 对主流的框架提供了支持，例如ORM框架Hibernate、MyBatis、JPA（JPA是一种协议，实现了该协议的都可以算作JPA框架，比如Hibernate），其他框架如Struts2等

5. Spring的IOC容器实现了控制反转，将对象之间的依赖关系交给Spring，减少了系统间的耦合，可以更专注于业务逻辑的实现

6. Spring的高度可开放型，可以选择Spring的部分进行引入或全部引入

# Spring的基础知识

## 反射

为什么要讲反射，实际上，Spring的IOC实现就是用了反射的机制。最基础的IOC容器可以理解为根据XML文件进行解析，对于解析出来的类名进行反射的调用，从而创建该类的对象，并将其放置到上下文容器中(可以用Map实现，key就是XML中配置的名字或id，value就是该对象)。通过这样的方式，对于创建对象时所需要的依赖，我们也通过反射的方式拿到托管对象的setter方法，然后将依赖对象或字段设置成为成员变量，便实现了控制反转，对象的创建和获取全都交由了Spring的IOC容器处理。

## 代理
